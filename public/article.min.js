"use strict";console.log(ort);const t=640,n=640,o=3,a=4,r=25200,e=7,h=.25,c=.45,d=7680;function u(t,n,o,a){return[Math.round(t-o/2),Math.round(t+o/2),Math.round(n-a/2),Math.round(n+a/2)]}function i(t,n,o,a,r,e,h,c){let[d,i,s,l]=u(t,n,o,a);const g=o*a;let[M,f,m,v]=u(r,e,h,c);const w=h*c,p=Math.max(d,M),x=Math.min(i,f),I=Math.max(s,m),y=Math.min(l,v),E=Math.max(0,x-p)*Math.max(0,y-I);return E/(g+w-E)}function s(s){if(null!=s){const l=new Float32Array(t*n*3);console.assert(640===s.height,"bad height, expect 640"),console.assert(640===s.width,"bad width, expect 640"),function(a,r){const e=new Uint8Array(a.data),h=4*a.width;for(var c=0,d=0;d<o;++d)for(var u=0;u<t;++u){const t=Math.round(1*u)*h;for(var i=0;i<n;++i){var s=e[t+4*Math.round(1*i)+d]/255;r[c]=s,c++}}}(s,l);const g=new ort.Tensor("float32",l,[1,3,t,n]);ort.InferenceSession.create("./lib/nano.onnx").then((o=>{o.run({input:g}).then((o=>{!function(o,s,l){for(var g=[],M=0;M<r;M++){var f=o.subarray(M*e,(M+1)*e);if(f[a]>h){let t=0,n=0;for(var m=5;m<e;m++)f[m]>t&&(t=f[m],n=m-5);const o=f[a]*t;if(o>h){var v=d*n;g.push([f[0]+v,f[1]+v,f[2],f[3],o,n])}}}console.log("candidates:",g),g=g.sort(((t,n)=>n[a]-t[a]));var w=[];g.forEach((t=>{let n=!0;for(var o=0;o<w.length;o++)i(t[0],t[1],t[2],t[3],w[o][0],w[o][1],w[o][2],w[o][3])>c&&(n=!1);n&&w.push(t)}));var p=l/n,x=s/t,I=[];w.forEach((t=>{var n=d*t[5];let[o,a,r,e]=u(Math.round(t[0])-n,Math.round(t[1])-n,Math.round(t[2]),Math.round(t[3]));o=Math.round(o*p),a=Math.round(a*p),r=Math.round(r*x),e=Math.round(e*x),I.push([o,a,r,e,t[4],t[5]])}));let y="";I.forEach((t=>{y+="["+t.toString()+"]\n"})),console.log("推理结果："),console.log(y)}(o.output.data,s.height,s.width)}))}))}}window.loadImage=()=>{console.log("启动物品模型");const o=document.getElementById("myImg");var a=document.createElement("canvas"),r=a.getContext("2d");a.width=n,a.height=t,null==r||r.drawImage(o,0,0,o.width,o.height);var e=r.getImageData(0,0,a.width,a.height),h=a.toDataURL("image/png");s(e),h.split(",")[1]};
